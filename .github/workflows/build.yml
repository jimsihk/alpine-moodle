name: Build and push docker image

on:
  push:
    tags: ['*']
    branches: ["dev"]
  pull_request:
    tags: ['*']
    branches: ["dev"]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/386,linux/ppc64le,linux/s390x

          VERSION=${GITHUB_REF#refs/*/}
          TAGS="${{ env.IMAGE_NAME }}:${VERSION}"

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAGS="$TAGS,${{ env.IMAGE_NAME }}:latest"
          fi

          echo ::set-output name=platforms::${DOCKER_PLATFORMS}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=version::${VERSION}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        # with:
        #   install: true

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        run: |
          docker buildx build .

      - name: Test
        run: |
          docker-compose version
          docker-compose --file docker-compose.test.yml up --exit-code-from sut --timeout 10 --build

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ env.IMAGE_NAME }}:${{ steps.prepare.outputs.version }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prepare.outputs.tags }}
          platforms: ${{ steps.prepare.outputs.platforms }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          short-description: ${{ github.event.repository.description }}
